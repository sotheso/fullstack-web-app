version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: davvvat_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-11331133}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-DavvvatDB}
      MYSQL_USER: ${MYSQL_USER:-davvvat_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-davvvat_pass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - davvvat_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: davvvat_backend
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE:-DavvvatDB}
      - DB_USER=${MYSQL_USER:-davvvat_user}
      - DB_PASSWORD=${MYSQL_PASSWORD:-davvvat_pass}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - ALLOWED_ORIGIN=${ALLOWED_ORIGIN:-http://localhost:3000}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - davvvat_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: davvvat_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://backend:5001/api}
    depends_on:
      - backend
    networks:
      - davvvat_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: davvvat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - davvvat_network

volumes:
  mysql_data:

networks:
  davvvat_network:
    driver: bridge
